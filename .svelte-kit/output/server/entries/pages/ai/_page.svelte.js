import { c as create_ssr_component, b as add_attribute } from "../../../chunks/ssr.js";
import "ollama";
const css = {
  code: "main.svelte-6pv6h7{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh}form.svelte-6pv6h7{display:flex;flex-direction:column;align-items:center}input.svelte-6pv6h7{margin-bottom:1rem}button.svelte-6pv6h7{padding:0.5rem 1rem}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<!-- <script>\\n  import { enhance } from \\"$app/forms\\";\\n\\n  export let data;\\n  export let form;\\n\\n  let responseText = \\"\\";\\n  let inputPrompt = data.prompt || \\"\\";\\n  let isLoading = false; // Step 1: Add a loading state variable\\n\\n  async function streamResponse(response) {\\n    responseText = \\"\\";\\n    let words = response.split(\\" \\");\\n    for (let word of words) {\\n      responseText += word + \\" \\";\\n      await new Promise((resolve) => setTimeout(resolve, 50));\\n    }\\n    isLoading = false; // Update the loading state once done\\n  }\\n\\n  $: {\\n    if (form?.response) {\\n      isLoading = true; // Set loading state to true when response starts\\n      streamResponse(form.response);\\n    }\\n  }\\n<\/script>\\n\\n<form method=\\"POST\\" use:enhance>\\n  <input\\n    class=\\"input input-bordered w-full\\"\\n    name=\\"prompt\\"\\n    type=\\"text\\"\\n    bind:value={inputPrompt}\\n    placeholder=\\"Enter your prompt\\"\\n  />\\n  <button type=\\"submit\\">Submit</button>\\n</form>\\n\\n{#if isLoading}\\n   Step 3: Conditionally render loading indicator -->\\n<!--   <p>Loading...</p>\\n{/if}\\n\\n{#if form}\\n  {#if form.success}\\n    <h2>Prompt: {inputPrompt}</h2>\\n    <h3>Response:</h3>\\n    <p>{responseText}</p>\\n  {:else}\\n    <p>Error: {form.response}</p>\\n  {/if}\\n{/if}\\n -->\\n\\n<script>\\n  import ollama from \\"ollama\\";\\n\\n  let prompt = \\"\\";\\n  let response = \\"\\";\\n  let isLoading = false;\\n\\n  async function getResponse() {\\n    if (!prompt) return;\\n    isLoading = true;\\n    response = \\"\\";\\n\\n    try {\\n      const res = await ollama.chat({\\n        model: \\"llama2-uncensored\\",\\n        messages: [{ role: \\"user\\", content: prompt }],\\n      });\\n      response = res.message.content;\\n    } catch (error) {\\n      response = \\"Error fetching response: \\" + error.message;\\n    } finally {\\n      isLoading = false;\\n    }\\n  }\\n<\/script>\\n\\n<main>\\n  <h1>Ask the AI</h1>\\n  <form on:submit|preventDefault={getResponse}>\\n    <label for=\\"prompt\\">Enter your question:</label>\\n    <input type=\\"text\\" id=\\"prompt\\" bind:value={prompt} />\\n    <button type=\\"submit\\" disabled={isLoading}>Ask</button>\\n  </form>\\n\\n  {#if isLoading}\\n    <p>Loading...</p>\\n  {/if}\\n\\n  {#if response}\\n    <h2>Response:</h2>\\n    <p>{response}</p>\\n  {/if}\\n</main>\\n\\n<style>\\n  main {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100vh;\\n  }\\n\\n  form {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\\n  input {\\n    margin-bottom: 1rem;\\n  }\\n\\n  button {\\n    padding: 0.5rem 1rem;\\n  }\\n</style>\\n"],"names":[],"mappings":"AAoGE,kBAAK,CACH,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,MAAM,CAAE,KACV,CAEA,kBAAK,CACH,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MACf,CAEA,mBAAM,CACJ,aAAa,CAAE,IACjB,CAEA,oBAAO,CACL,OAAO,CAAE,MAAM,CAAC,IAClB"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let prompt = "";
  $$result.css.add(css);
  return `   <main class="svelte-6pv6h7"><h1 data-svelte-h="svelte-1rlu8eo">Ask the AI</h1> <form class="svelte-6pv6h7"><label for="prompt" data-svelte-h="svelte-yhnjcv">Enter your question:</label> <input type="text" id="prompt" class="svelte-6pv6h7"${add_attribute("value", prompt, 0)}> <button type="submit" ${""} class="svelte-6pv6h7">Ask</button></form> ${``} ${``} </main>`;
});
export {
  Page as default
};
